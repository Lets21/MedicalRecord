version: 2.1

executors:
  node_browsers:
    docker:
      - image: cimg/node:20.11-browsers

workflows:
  build_and_deploy:
    jobs:
      - install_deps
      - test_unit:
          requires: [install_deps]
      - smoke_e2e:
          requires: [test_unit]

jobs:
  install_deps:
    executor: node_browsers
    steps:
      - checkout
      - run: npm ci

  test_unit:
    executor: node_browsers
    steps:
      - checkout
      - run: npm run test:unit || echo "sin tests sólidos aún"

  smoke_e2e:
    executor: node_browsers
    environment:
      APP_URL: "http://localhost:4173"
    steps:
      - checkout
      - run:
          name: Serve dist y smoke
          command: |
            npm run build
            npx -y serve dist -l 4173 &>/tmp/preview.log &
            PID=$!
            for i in $(seq 1 40); do curl -fsS "$APP_URL" && break || sleep 1; done
            echo "Smoke: página responde"
            kill $PID || true
      - run:
          name: Telegram OK
          when: on_success
          command: |
            if [ -n "${TELEGRAM_BOT_TOKEN:-}" ] && [ -n "${TELEGRAM_CHAT_ID:-}" ]; then
              MSG="✅ Smoke OK • ${CIRCLE_PROJECT_REPONAME} • ${CIRCLE_BRANCH} • ${CIRCLE_BUILD_URL}"
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d chat_id="${TELEGRAM_CHAT_ID}" --data-urlencode text="$MSG" >/dev/null || true
            fi
      - run:
          name: Telegram FAIL
          when: on_fail
          command: |
            if [ -n "${TELEGRAM_BOT_TOKEN:-}" ] && [ -n "${TELEGRAM_CHAT_ID:-}" ]; then
              MSG="❌ Smoke FAIL • ${CIRCLE_PROJECT_REPONAME} • ${CIRCLE_BRANCH} • ${CIRCLE_BUILD_URL}"
              curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
                -d chat_id="${TELEGRAM_CHAT_ID}" --data-urlencode text="$MSG" >/dev/null || true
            fi
